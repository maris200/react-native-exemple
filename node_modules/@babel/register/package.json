{
  "_args": [
    [
      {
        "raw": "@babel/register@7.0.0-beta.47",
        "scope": "@babel",
        "escapedName": "@babel%2fregister",
        "name": "@babel/register",
        "rawSpec": "7.0.0-beta.47",
        "spec": "7.0.0-beta.47",
        "type": "version"
      },
      "/Users/duh/Desktop/marverl/node_modules/metro"
    ]
  ],
  "_from": "@babel/register@7.0.0-beta.47",
  "_hasShrinkwrap": false,
  "_id": "@babel/register@7.0.0-beta.47",
  "_location": "/@babel/register",
  "_nodeVersion": "8.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/register_7.0.0-beta.47_1526342837902_0.500306878228922"
  },
  "_npmUser": {
    "name": "hzoo",
    "email": "hi@henryzoo.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@babel/register@7.0.0-beta.47",
    "scope": "@babel",
    "escapedName": "@babel%2fregister",
    "name": "@babel/register",
    "rawSpec": "7.0.0-beta.47",
    "spec": "7.0.0-beta.47",
    "type": "version"
  },
  "_requiredBy": [
    "/metro",
    "/metro-babel-register"
  ],
  "_resolved": "https://registry.npmjs.org/@babel/register/-/register-7.0.0-beta.47.tgz",
  "_shasum": "ac53bc357ca59979db0e306aa5d3121aa612a7a2",
  "_shrinkwrap": null,
  "_spec": "@babel/register@7.0.0-beta.47",
  "_where": "/Users/duh/Desktop/marverl/node_modules/metro",
  "author": {
    "name": "Sebastian McKenzie",
    "email": "sebmck@gmail.com"
  },
  "browser": {
    "./lib/node.js": "./lib/browser.js"
  },
  "dependencies": {
    "core-js": "^2.5.3",
    "find-cache-dir": "^1.0.0",
    "home-or-tmp": "^3.0.0",
    "lodash": "^4.17.5",
    "mkdirp": "^0.5.1",
    "pirates": "^3.0.1",
    "source-map-support": "^0.4.2"
  },
  "description": "babel require hook",
  "devDependencies": {
    "@babel/core": "7.0.0-beta.47",
    "default-require-extensions": "^2.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-r5aS1bAqW0tHvwUNPRRdmIedSWGK/oyv598EENpV/+VZF8EkX9TiVqCpJyg6zucPPyMjtdXN1pK/Yljp5NdGGA==",
    "shasum": "ac53bc357ca59979db0e306aa5d3121aa612a7a2",
    "tarball": "https://registry.npmjs.org/@babel/register/-/register-7.0.0-beta.47.tgz",
    "fileCount": 6,
    "unpackedSize": 11708,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa+iS2CRA9TVsSAnZWagAAaH0P/R310l1DoYNkWi0OGVb/\n+NmPi+k1vDlqpYO+IHEEUraLJbFSrTB2hVvAM6U2Y9CbSr1BzfzXdN5b/g8S\n3qskmMkYbNRmGDzHgNclPLN2zMP5VbmOb8I5UgbCCA4qfH5a6+OhT6/ADBN9\nSaV2IeLQMR2DoM5PCDBGNPu0KptnOTrUx5zp59IQf/fwBYt+xnw476BdX4ym\nGGS38aikzDNc0Uq3pgEtLMcb9Xws2VluYcXBNRhkEszDnyEqzk7JMno4+Xjz\n/JQRxXL7u7Oza+LT9zLlqBOuIGoTxiVnfc8TlXz2qKm/fugnu8G8DdUI09RF\nYPGsiMX5u15N9i31SPERv1ZUnTzVRvbqNK1BbO5cIxUIRjrOH0W+udmfBuDh\nFmwgETfHcJFfVRR+2XDA6f62chA81OrAziszvI1GsGBzPE8LbS/8Y3cawLHt\nBfoMrQiCQXfq8ITTws7e/EkZdoj8UYGSiQltOTK+ic8FczdVsTTB+WgEJiSy\nFTYYjh5mPBLtx4JJSrEsBRBaddgxkhB6k9oNFH80UZ1fyd+7W2JIHxumKg1l\nk8ZCRlWzE2M1fKggQt++HX2SH5zktMyhNk+uOdees8Ntj10lJksweE8ZvEQj\n4hfvEmGCfmI+OhnvV9yv516tT0a2sBMKQVSQm+wCYKRLQ5w+NOvct9neFrnH\nAeKU\r\n=qYet\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "danez",
      "email": "daniel@tschinder.de"
    },
    {
      "name": "existentialism",
      "email": "bng412@gmail.com"
    },
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    },
    {
      "name": "loganfsmyth",
      "email": "loganfsmyth@gmail.com"
    },
    {
      "name": "xtuc",
      "email": "contact@xtuc.fr"
    }
  ],
  "name": "@babel/register",
  "optionalDependencies": {},
  "peerDependencies": {
    "@babel/core": "7.0.0-beta.47"
  },
  "readme": "# @babel/register\n\n> The require hook will bind itself to node's require and automatically compile files on the fly.\n\nOne of the ways you can use Babel is through the require hook. The require hook\nwill bind itself to node's `require` and automatically compile files on the\nfly. This is equivalent to CoffeeScript's\n[coffee-script/register](http://coffeescript.org/v2/annotated-source/register.html).\n\n## Install\n\n```sh\nnpm install @babel/core @babel/register --save-dev\n```\n\n## Usage\n\n```js\nrequire(\"@babel/register\");\n```\n\nAll subsequent files required by node with the extensions `.es6`, `.es`, `.jsx`,\n`.mjs`, and `.js` will be transformed by Babel.\n\n<blockquote class=\"babel-callout babel-callout-info\">\n  <h4>Polyfill not included</h4>\n  <p>\n    You must include the <a href=\"https://babeljs.io/docs/usage/polyfill/\">polyfill</a> separately\n    when using features that require it, like generators.\n  </p>\n</blockquote>\n\n### Ignores `node_modules` by default\n\n**NOTE:** By default all requires to `node_modules` will be ignored. You can\noverride this by passing an ignore regex via:\n\n```js\nrequire(\"@babel/register\")({\n  // This will override `node_modules` ignoring - you can alternatively pass\n  // an array of strings to be explicitly matched or a regex / glob\n  ignore: []\n});\n```\n\n## Specifying options\n\n```javascript\nrequire(\"@babel/register\")({\n  // Array of ignore conditions, either a regex or a function. (Optional)\n  ignore: [\n    // When a file path matches this regex then it is **not** compiled\n    /regex/,\n\n    // The file's path is also passed to any ignore functions. It will\n    // **not** be compiled if `true` is returned.\n    function (filepath) {\n      return filepath !== \"/path/to/es6-file.js\";\n    }\n  ],\n\n  // Optional only regex - if any filenames **don't** match this regex then they\n  // aren't compiled\n  only: /my_es6_folder/,\n\n  // Setting this will remove the currently hooked extensions of `.es6`, `.es`, `.jsx`, `.mjs`\n  // and .js so you'll have to add them back if you want them to be used again.\n  extensions: [\".es6\", \".es\", \".jsx\", \".js\", \".mjs\"],\n\n  // Setting this to false will disable the cache.\n  cache: true\n});\n```\n\nYou can pass in all other [options](https://babeljs.io/docs/usage/api/#options) as well,\nincluding `plugins` and `presets`. But note that the closest [`.babelrc`](https://babeljs.io/docs/usage/babelrc/)\nto each file still applies, and takes precedence over any options you pass in here.\n\n## Environment variables\n\nBy default `@babel/node` cli and `@babel/register` will save to a json cache in your\ntemporary directory.\n\nThis will heavily improve with the startup and compilation of your files. There\nare however scenarios where you want to change this behaviour and there are\nenvironment variables exposed to allow you to do this.\n\n### BABEL_CACHE_PATH\n\nSpecify a different cache location.\n\n```sh\nBABEL_CACHE_PATH=/foo/my-cache.json babel-node script.js\n```\n\n### BABEL_DISABLE_CACHE\n\nDisable the cache.\n\n```sh\nBABEL_DISABLE_CACHE=1 babel-node script.js\n```\n\n## Compiling plugins and presets on the fly\n\n`@babel/register` uses Node's `require()` hook system to compile files\non the fly when they are loaded. While this is quite helpful overall, it means\nthat there can be confusing cases where code within a `require()` hook causes\n_more_ calls to `require`, causing a dependency cycle. In Babel's case for\ninstance, this could mean that in the process of Babel trying to compile a\nuser's file, Babel could end up trying to compile itself _as it is loading_.\n\nTo avoid this problem, this module explicitly disallows re-entrant compilation,\ne.g. Babel's own compilation logic explicitly cannot trigger further compilation\nof any other files on the fly. The downside of this is that if you want to \ndefine a plugin or preset that is itself live-compiled, the process is \ncomplicated.\n\nThe crux of it is that your own code needs to load the plugin/preset first. \nAssuming the plugin/preset loads all of its dependencies up front, what you'll \nwant to do is:\n\n```\nrequire(\"@babel/register\")({\n  // ...\n});\n\nrequire(\"./my-plugin\");\n```\n\nBecause it is your own code that triggered the load, and not the logic within\n`@babel/register` itself, this should successfully compile any plugin/preset\nthat that loads synchronously.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-register"
  },
  "version": "7.0.0-beta.47"
}
